var getFlowName=function(t){getFlowByID(t).then(function(t){return console.log(t.name),t.name}).catch(function(t){console.log(t)})};$(document).ready(function(){var t="",e=$("#depID").val(),n="",a="",o="",s=[],l="",c="",i="",d=$("input[name=retrieve_Date]").val();getAllFlowsByDepartmet(e).then(function(t){for(var e=0;e<t.length;e++)$("#core_flows").append("<tr><td>"+parseInt(1+e)+"</td><td>"+t[e].name+'</td><td class="table__cell-actions"><div class="table__cell-actions-wrap">\n                                                    <button name=\'editFlow\' data-flow=\''+t[e].name+"' data-flowID='"+t[e].id+"' class=\"btn btn-info table__cell-actions-item\">Edit</button>\n                                                    <button name='deleteFlow' data-flowID='"+t[e].id+'\' class="btn btn-danger table__cell-actions-item">Delete</button>\n                                                </div>\n                                            </td></tr>'),$("#flowTask").append("<option value='"+t[e].id+"'>"+t[e].name+"</option>"),$("#editFlowTask").append("<option value='"+t[e].id+"'>"+t[e].name+"</option>")}).catch(function(t){console.log(t)}),getAllTasksByDepartment(e).then(function(t){for(var e=0;e<t.length;e++)$("#core_tasks").append("<tr><td>"+parseInt(1+e)+"</td><td>"+t[e].name+"</td><td>"+t[e].flow+'</td><td class="table__cell-actions">\n                                                <div class="table__cell-actions-wrap">\n                                                    <button name="editBtn" data-taskID=\''+t[e].id+"' data-task='"+t[e].name+'\' class="btn btn-info table__cell-actions-item">Edit</button>\n                                                    <button name="deleteTask" data-taskID=\''+t[e].id+'\' class="btn btn-danger table__cell-actions-item">Delete</button>\n                                                </div>\n                                            </td></tr>')}).catch(function(t){console.log(t)}),getAllMemberByDepartment(e).then(function(e){for(var n=0;n<e.length;n++){switch(parseInt(e[n].position)){case 1:t="Admin";break;case 2:t="Manager";break;default:t="Member"}$("#core_users").append("<tr><td>"+parseInt(1+n)+"</td><td>"+e[n].name+"</td><td>"+e[n].email+"</td><td>"+t+'</td><td class="table__cell-actions">\n                                                <div class="table__cell-actions-wrap">\n                                                    <button name="editUser" data-userrole=\''+e[n].position+"' data-username='"+e[n].name+"' data-userID='"+e[n].id+'\' class="btn btn-info table__cell-actions-item">Edit</button>\n                                                    <button name="deleteUser" data-userID=\''+e[n].id+'\' class="btn btn-danger table__cell-actions-item">Delete</button>\n                                                </div>\n                                            </td></tr>')}}).catch(function(t){console.log(t)});var r=function t(){return $("#core_checkedTask").each(function(){$(this).find("tr").remove()}),getCheckedTasks(e,d).then(function(t){for(var e=0;e<t.length;e++)s.push(t[e].task),$("#core_checkedTask").append("<tr><td>"+parseInt(1+e)+"</td><td>"+t[e].username+"</td><td>"+t[e].task.length+'</td><td user-review="'+t[e].user+'">'+(t[e].review?t[e].review+"/5":"not yet review")+'</td><td class="table__cell-actions">\n                                                <div class="table__cell-actions-wrap">\n                                                    <button name="btnReviewTask" data-Date=\''+t[e].data+"' data-ratingUser='"+t[e].user+"' data-index='"+e+'\' class="btn btn-info table__cell-actions-item">Review</button>\n                                                </div>\n                                            </td></tr>')}).catch(function(t){console.log(t)}),t}();$("#flowTask").on("change",function(t){t.preventDefault(),console.log($(this).val())}),$("#taskName").on("change",function(t){t.preventDefault(),console.log($(this).val())}),$("button[name=addNewTask]").on("click",function(t){t.preventDefault();var n=$("#taskName").val(),a=$("#flowTask").val();""===n.trim()||""===a.trim()?$.confirm({title:"All Fields are Required!",content:"Pleas input all the fields.",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}}):addNewTask(e,a,n).then(function(t){$.confirm({title:"Data Added!",content:"Data successfully added!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-Task").modal("toggle"),location.reload()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not add please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=editBtn]",function(t){t.preventDefault(),$("#editTaskName").val($(this).attr("data-task")),n=$(this).attr("data-taskID"),$("#modal-editTask").modal("show")}),$("button[name=editTask]").on("click",function(t){t.preventDefault();var e=$("#editFlowTask").val(),a=$("#editTaskName").val();""===e.trim()?updateTask(n,a).then(function(t){console.log(t),$.confirm({title:"Data updated!",content:"Data successfully updated!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-editTask").modal("toggle")}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not update, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})}):updateTaskWithFlow(e,n,a).then(function(t){console.log(t),$.confirm({title:"Data updated!",content:"Data successfully updated!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-editTask").modal("toggle")}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not update, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=deleteTask]",function(t){t.preventDefault();var e=$(this).attr("data-taskID"),n=$(this).parent().parent().parent();deleteTask(e).then(function(t){$.confirm({title:"Data Deleted!",content:"Data successfully deleted!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){n.remove()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not delete, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$("button[name=addNewFlow]").on("click",function(t){t.preventDefault();var n=$("#flowName").val();""===n.trim()?$.confirm({title:"All Fields is Required!",content:"Pleas input all the fields.",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}}):addNewFlow(e,n).then(function(t){$.confirm({title:"Flow Added!",content:"Flow successfully Added!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-Flow").modal("toggle"),location.reload()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Flow did not add, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=deleteFlow]",function(t){t.preventDefault();var e=$(this).attr("data-flowID"),n=$(this).parent().parent().parent();deleteFlow(e).then(function(t){$.confirm({title:"Data Deleted!",content:"Data successfully deleted!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){n.remove()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not delete, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=editFlow]",function(t){t.preventDefault(),a=$(this).attr("data-flowID"),$("#editFlowName").val($(this).attr("data-flow")),$("#modal-editFlow").modal("show")}),$("button[name=editFlowBtn]").on("click",function(t){t.preventDefault();var e=$("#editFlowName").val();updateFlow(a,e).then(function(t){$.confirm({title:"Data updated!",content:"Data successfully updated!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-editFlow").modal("toggle"),location.reload()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not update, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$("button[name=addNewUser]").on("click",function(t){t.preventDefault();var n=$("#username").val(),a=$("#useremail").val(),o=$("#userrole").val();""===n.trim()||""===a.trim()||""===o.trim()?$.confirm({title:"All Fields is Required!",content:"Pleas input all the fields.",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}}):addNewUser(e,n,a,o).then(function(t){$.confirm({title:"User Added!",content:"User successfully Added!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){location.reload()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Flow did not add, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=deleteUser]",function(t){t.preventDefault();var e=$(this).attr("data-userID"),n=$(this).parent().parent().parent();deleteUser(e).then(function(t){$.confirm({title:"Data Deleted!",content:"Data successfully deleted!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){n.remove()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not delete, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=editUser]",function(t){t.preventDefault(),o=$(this).attr("data-userID"),$("#editUsername").val($(this).attr("data-username")),$("#editUserrole").val($(this).attr("data-userrole")),$("#modal-editMember").modal("show")}),$("button[name=saveEditUser]").on("click",function(t){t.preventDefault();var e=$("#editUsername").val(),n=$("#editUserrole").val();""===e.trim()||""===n.trim()?$.confirm({title:"All Fields is Required!",content:"Pleas input all the fields.",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}}):updateUser(o,e,n).then(function(t){$.confirm({title:"Data updated!",content:"Data successfully updated!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#modal-editFlow").modal("toggle"),location.reload()}}}})}).catch(function(t){console.log(t),$.confirm({title:"Database Error!",content:"Data did not update, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$(document).on("click","button[name=btnReviewTask]",function(t){t.preventDefault(),i=$(this).attr("data-index");var e=s[i];console.log("this is current index: ",i),c=$(this).attr("data-ratingUser"),l=$(this).attr("data-Date"),$("#review_ckeck_tasks").each(function(){$(this).find("tr").remove()});for(var n=0;n<e.length;n++)$("#review_ckeck_tasks").append("<tr><td>"+parseInt(1+n)+"</td><td>"+e[n].name+"</td><td>"+e[n].rating+"/5</td></tr>");$("#review_Tasks").modal("show")}),$("button[name=btnReviewSubmit]").on("click",function(t){t.preventDefault();var e=$("#rating").val();submitManagerRating(c,e,l).then(function(t){$.confirm({title:"User Added!",content:"User successfully Added!",type:"success",buttons:{confirm:{text:"OK",btnClass:"btn-success",action:function(){$("#review_Tasks").modal("toggle"),$("td[user-review="+c+"]").text(e+"/5")}}}})}).catch(function(t){$.confirm({title:"Database Error!",content:"Flow did not add, please try again!",type:"danger",buttons:{confirm:{text:"OK",btnClass:"btn-danger"}}})})}),$("input[name=retrieve_Date]").on("change",function(t){t.preventDefault(),d=$(this).val(),s=[],r()})});